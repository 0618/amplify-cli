AWSTemplateFormatVersion: "2010-09-09"
Resources: 

  AccessPolicy:
    Type: "AWS::IAM::Policy"
    Properties:
      Roles:
        <%if (props.accessLevel !== 'Protected') { %>
        - <%= props.unAuthRoleName %>
        <% } %>
        <%if (props.accessLevel === 'Protected') { %>
        - <%= props.authRoleName %>
        <% } %>
      PolicyName: "DynamoAccessPolicy55"
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action:
            <%if (props.accessLevel !== 'Private') { %>
              - "dynamodb:BatchGetItem"
              - "dynamodb:DescribeTable"
              - "dynamodb:GetItem"
              - "dynamodb:ListTables"
              - "dynamodb:Query"
              - "dynamodb:Scan"
            <% } %>            
            <%if (props.accessLevel === 'Private') { %>
              - "dynamodb:BatchWriteItem"
              - "dynamodb:DeleteItem"
              - "dynamodb:PutItem"
              - "dynamodb:UpdateItem"   
            <% } %> 
            Resource:
              - !GetAtt DynamoDBTable.Arn
              - !Join [ "/", [ !GetAtt DynamoDBTable.Arn, "index/MyIndex"  ]]
            <%if (props.accessLevel === 'Private') { %>
            Condition:
              ForAllValues:StringEquals:
                dynamodb:LeadingKeys:
                  - ${cognito-identity.amazonaws.com:sub}
            <% } %>
          - Effect: Allow
            Action:
            <%if (props.accessLevel !== 'Private') { %>
              - "dynamodb:BatchWriteItem"
              - "dynamodb:DeleteItem"
              - "dynamodb:PutItem"
              - "dynamodb:UpdateItem"
            <% } %>
            <%if (props.accessLevel === 'Private') { %>      
              - "dynamodb:BatchGetItem"
              - "dynamodb:DescribeTable"
              - "dynamodb:GetItem"
              - "dynamodb:ListTables"
              - "dynamodb:Query"
            <% } %>
            Resource:
              - !GetAtt DynamoDBTable.Arn
              - !Join [ "/", [ !GetAtt DynamoDBTable.Arn, "index/MyIndex"  ]]
            
            <%if (props.accessLevel === 'Protected') { %>
            Condition:
              ForAllValues:StringEquals:
                dynamodb:LeadingKeys:
                  - ${cognito-identity.amazonaws.com:sub}
            <% } %>
    DependsOn: "DynamoDBTable"       

  DynamoDBTable: 
    Type: "AWS::DynamoDB::Table"
    Properties: 
      AttributeDefinitions: 
        <% for(var i=0; i < props.AttributeDefinitions.length; i++) { %>
        -
          AttributeName: <%= props.AttributeDefinitions[i].AttributeName %>
          AttributeType: <%= props.AttributeDefinitions[i].AttributeType %>

        <% } %>
      KeySchema: 
        <% for(var i=0; i < props.KeySchema.length; i++) { %>
        -
          AttributeName: <%= props.KeySchema[i].AttributeName %>
          KeyType: <%= props.KeySchema[i].KeyType %>
        <% } %>
      ProvisionedThroughput: 
        ReadCapacityUnits: "5"
        WriteCapacityUnits: "5"
      TableName: <%= props.TableName %>
      <%if (props.GlobalSecondaryIndexes) { %>
      GlobalSecondaryIndexes: 
        <% for(var i=0; i < props.GlobalSecondaryIndexes.length; i++) { %>
        -
          IndexName: <%= props.GlobalSecondaryIndexes[i].IndexName %>
          KeySchema:
            <% for(var j=0; j < props.GlobalSecondaryIndexes[i].KeySchema.length; j++) { %>
            -
              AttributeName: <%= props.GlobalSecondaryIndexes[i].KeySchema[j].AttributeName %>
              KeyType: <%= props.GlobalSecondaryIndexes[i].KeySchema[j].KeyType %>
            <% } %>
          Projection:
            ProjectionType: ALL
          ProvisionedThroughput: 
            ReadCapacityUnits: "5"
            WriteCapacityUnits: "5"
        <% } %>
      <% } %>

Outputs :
  Name:
    Value: !Ref 'DynamoDBTable'
  Arn:
    Value: !GetAtt DynamoDBTable.Arn